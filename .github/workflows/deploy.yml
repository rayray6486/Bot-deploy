name: Deploy to Droplet

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # compile is optional; tolerate missing folders/globs
      - name: Compile check
        shell: bash
        run: |
          shopt -s nullglob
          python -m py_compile slum_house_capital_bot.py cogs/*.py utils/*.py || true

      # Verify required secrets exist (won't print them)
      - name: Validate required secrets
        env:
          HOST:   ${{ secrets.DROPLET_IP }}
          USER:   ${{ secrets.DROPLET_SSH_USER }}
          SSHKEY: ${{ secrets.DROPLET_SSH_KEY }}
        run: |
          test -n "$HOST"  || { echo "Missing DROPLET_IP"; exit 1; }
          test -n "$USER"  || { echo "Missing DROPLET_SSH_USER"; exit 1; }
          test -n "$SSHKEY"|| { echo "Missing DROPLET_SSH_KEY"; exit 1; }

      # Copy repo (we keep .env on the server)
      - name: Copy files to Droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_SSH_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "."
          target: "/root/Bot-deploy"
          rm: true
          overwrite: true

      # Install deps, ensure systemd unit, restart, tail logs (all YAML-safe)
      - name: Install deps & restart service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_SSH_USER }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            set -euo pipefail
            cd /root/Bot-deploy

            # venv + deps
            python3 -m venv .venv || true
            . .venv/bin/activate
            pip install --upgrade pip setuptools wheel
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt
            else
              pip install -U py-cord requests yfinance PyPDF2 python-dotenv nltk
            fi

            # NLTK (single line; no heredoc)
            python -c "import nltk; [nltk.download(p, quiet=True) for p in ('punkt','stopwords')]" || true

            # Ensure .env exists
            if [ ! -f .env ]; then
              echo 'ERROR: /root/Bot-deploy/.env not found on server. Create it and re-run.' >&2
              exit 2
            fi

            # Idempotent systemd unit (printf avoids heredocs)
            if [ ! -f /etc/systemd/system/slumhousebot.service ]; then
              printf '%s\n' \
                '[Unit]' \
                'Description=Slum House Capital Discord Bot' \
                'After=network-online.target' \
                '' \
                '[Service]' \
                'User=root' \
                'WorkingDirectory=/root/Bot-deploy' \
                'EnvironmentFile=/root/Bot-deploy/.env' \
                'ExecStart=/root/Bot-deploy/.venv/bin/python /root/Bot-deploy/slum_house_capital_bot.py' \
                'Restart=always' \
                'RestartSec=5' \
                '' \
                '[Install]' \
                'WantedBy=multi-user.target' \
                > /etc/systemd/system/slumhousebot.service
              systemctl daemon-reload
              systemctl enable slumhousebot || true
            fi

            systemctl daemon-reload
            systemctl restart slumhousebot || true
            systemctl status  slumhousebot --no-pager || true
            journalctl -u slumhousebot -n 50 --no-pager || true
